Featueres (not sorted in order of importance
--------------------------------------------
async_testing.run:
+ better error handling when parsing arguments, and by better I mean, some
+ rethink args to run's callback (make them more useful)                        <----
+ help message summarizing async_testing in generateHelp
? allow a config file (at say ~/.node-async-testing.json) or something for
  setting default run options, so say if you want the default to have tests and
  suites be parallel you can do that.
? make the default to be to run test and suites in parallel?
? Add new flag, which says to run everything in parallel, but if a suite fails
  in some way, don't output it's results, instead re-run the suite serially
+ stop using home grown options parser and add one as a sub module

Console Runner:
+ readd number of completed tests back to summary in console runner             <----
? are we being too redundant when we have errors?

Web Runner:
+ checkbox for web runner to automatically run suites on window or tab focus
+ keep track of which suites have been opened and are parallel across refreshes
  (in a cookie)
+ checkbox to run suites in parallel or not (right now you have to specify this <----
  via the command line)
? Instead of just show test as blank when a file changes, mention something?
? Show number of failures when the test is closed?
+ only show suites that have tests we are running and only show those tests (in <----
  the case of the --test-name flag)

Running tests (async_testing.runSuite, async_testing.runFile):
? consider combining suiteCompleted, suiteError, suiteExit and suiteLoadError
  all into one callback, (suiteDone)
? test.finish can take error? so you could say do:
    `fs.readFile(test.finish)`
  to make sure that readFile doesn't error without having to write your
  own callback
+ timeout for suites or tests, the easiest and most fool proof way would be to
  just add this to, runFile and just have it kill the process after a certain
  amount of time.  It could look at the events it is getting from the child and
  restart the timeout every time a test finishes.  If we want to do this in
  runSuite I don't think there is anything we can do to about something like
  this happening (since node is single threaded and callbacks won't interrupt
  running code):
    `while(true) {}`
+ improve stack traces for assertion failures (remove first line, which is just
  the wrapped assertion being called)
+ code coverage
+ readd support for catching and reporting on errors that I ripped earlier this
  month. They screw up suiteSetup and suiteTeardown and setup and teardown, but
  we still might be able to make it work

Docs
----
+ update docs and add list of command line arguments for run and what they do
